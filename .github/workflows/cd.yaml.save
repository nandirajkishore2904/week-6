name: Continuous Deployment to GKE

on:
  push:
    branches:
      - main # Trigger on pushes to the 'main' branch

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: iris-cluster # <--- IMPORTANT: Replace with your actual GKE cluster name
  GKE_ZONE: us-central1-a # <--- IMPORTANT: Replace with your actual GKE cluster zone (e.g., us-central1-a)
  DEPLOYMENT_NAME: iris-api-deployment
  SERVICE_NAME: iris-api-service
  IMAGE_NAME: iris-api
  IMAGE_TAG: latest # Or use a more specific tag like ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Authenticate Docker to Google Container Registry
        run: gcloud auth configure-docker gcr.io

      - name: Build Docker image
        # Context is '.' because the Dockerfile is at the root of the cloned repo
        run: docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

      - name: Push Docker image to GCR
        run: docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Get GKE credentials
        run: gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --zone ${{ env.GKE_ZONE }}

      - name: Deploy to GKE
        run: |
          # Substitute the image in the deployment file with the correct GCR path
          # The path is now kubernetes/deployment.yaml because 'kubernetes' is a folder at the repo root
          sed -i "s|gcr.io/\[YOUR_GCP_PROJECT_ID\]/iris-api:latest|gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}|g" kubernetes/deployment.yaml

          # Apply the deployment and service manifests
          # Paths are relative to the repo root
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml
