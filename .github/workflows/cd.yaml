name: Continuous Deployment to GKE

on:
  push:
    branches:
      - main # Trigger this workflow on pushes to the 'main' branch

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: iris-cluster
  GKE_ZONE: us-central1-a
  DEPLOYMENT_NAME: iris-api-deployment
  SERVICE_NAME: iris-api-service
  
  # Define parts for the image path separately.
  # We cannot concatenate them here using ${{ env.VAR }} syntax.
  IMAGE_HOST: us-central1-docker.pkg.dev 
  IMAGE_REPO_NAME: iris-api # Renamed from IMAGE_NAME to IMAGE_REPO_NAME for clarity
  IMAGE_TAG: latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Authenticate Docker to Artifact Registry
        # Use the specific Artifact Registry host for authentication
        run: gcloud auth configure-docker ${{ env.IMAGE_HOST }}

      - name: Build Docker image
        # Construct the full image path directly in the run command
        run: docker build -t ${{ env.IMAGE_HOST }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_REPO_NAME }}:${{ env.IMAGE_TAG }} .

      - name: Push Docker image to Artifact Registry
        # Construct the full image path directly in the run command
        run: docker push ${{ env.IMAGE_HOST }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_REPO_NAME }}:${{ env.IMAGE_TAG }}

      - name: Get GKE credentials
        run: gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --zone ${{ env.GKE_ZONE }}

      - name: Deploy to GKE
        run: |
          # Construct the full image path within the shell script for the 'sed' command
          # The shell will correctly resolve the environment variables.
          FULL_IMAGE_PATH="${{ env.IMAGE_HOST }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_REPO_NAME }}:${{ env.IMAGE_TAG }}"
          
          # Replace the placeholder in deployment.yaml with the full Artifact Registry path
          sed -i "s|gcr.io/\[YOUR_GCP_PROJECT_ID\]/iris-api:latest|${FULL_IMAGE_PATH}|g" kubernetes/deployment.yaml

          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml
          echo "Waiting for deployment rollout to complete..."
          kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }}

          echo "Service details:"
          kubectl get service ${{ env.SERVICE_NAME }}
